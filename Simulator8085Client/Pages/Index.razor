@inject CodeEditorAPI CodeEditorAPI
@page "/"
<div class="container">
    <div class="row">
        <div class="col-12 col-sm-3">
            <FlagsStatus StateChanged="StateChanged" State="@State"/>
        </div>
        <div class="col-12 col-sm-6">
            <Editor codeEditorAPI="CodeEditorAPI" StateChanged="StateChanged" Memory="@State.Memory"/>
        </div>
        <div class="col-12 col-sm-3">
            <MemoryVisualiser ResetMemory="@State.ResetMemory" StateChanged="StateChanged" Memory=@State.Memory/>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-sm-3 ml-auto">
            <ErrorDisplay temp="@Errors"></ErrorDisplay>
        </div>
    </div>
</div>
PC:@State.PC
SP:@State.SP
PSW:@State.PSW
Flagreg:@State.flags.Flagreg
A:@State.registers.A
B:@State.registers.B
C:@State.registers.C
D:@State.registers.D
E:@State.registers.E
H:@State.registers.H
L:@State.registers.L
P:@State.flags.P
S:@State.flags.S
CY:@State.flags.CY
AC:@State.flags.AC
Z:@State.flags.Z

@code{
    State8085 State;
    List<AssembleError> Errors = new List<AssembleError>();
    protected override async Task OnInitializedAsync()
    {
        State = CodeEditorAPI.GetState();
    }
    public void StateChanged()
    {
        StateHasChanged();
    }
}